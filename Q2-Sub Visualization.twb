<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0518.1719                               -->
<workbook original-version='18.1' source-build='2020.1.4 (20201.20.0518.1719)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='deaths-natural-disasters-ihme' inline='true' name='federated.1pngd8t0ymx99h1ea9llm1q82q1i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deaths-natural-disasters-ihme' name='textscan.00315nb1cbki5u19xr0qs10tilye'>
            <connection class='textscan' directory='C:/Users/Maggi/Desktop' filename='deaths-natural-disasters-ihme.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00315nb1cbki5u19xr0qs10tilye' name='deaths-natural-disasters-ihme.csv' table='[deaths-natural-disasters-ihme#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deaths-natural-disasters-ihme.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;ï¿¥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[deaths-natural-disasters-ihme.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[deaths-natural-disasters-ihme.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[deaths-natural-disasters-ihme.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]</local-name>
            <parent-name>[deaths-natural-disasters-ihme.csv]</parent-name>
            <remote-alias>Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Number of Death' datatype='real' name='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477654' measure-ordering='alphabetic' measure-percentage='0.522346' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;High SDI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Europe, Eastern Europe, and Central Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andean Latin America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;High-income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southeast Asia, East Asia, and Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tropical Latin America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Low SDI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Latin America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Western Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle SDI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Europe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low-middle SDI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australasia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High-income Asia Pacific&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Latin America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Africa and Middle East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High-middle SDI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Rate by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths-natural-disasters-ihme' name='federated.1pngd8t0ymx99h1ea9llm1q82q1i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pngd8t0ymx99h1ea9llm1q82q1i'>
            <column caption='Total Number of Death' datatype='real' name='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' derivation='Sum' name='[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Entity:nk]' to='&quot;Western Sub-Saharan Africa&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Entity:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' included-values='in-range'>
            <min>0.0</min>
            <max>1438284.507638</max>
          </filter>
          <slices>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</column>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[Longitude (generated)]' field-type='quantitative' max='35060218.098968908' min='-21051869.972708151' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[Latitude (generated)]' field-type='quantitative' max='14121655.292012364' min='-22279828.110175624' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' num-steps='5' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' value='Country Selection'>
              <formatted-text>
                <run>Country Selection</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' />
              <size column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' />
              <geometry column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[Latitude (generated)]</rows>
        <cols>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BD31822-6DF3-4313-AAEC-74AA7ED6C457}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Death in Different Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths-natural-disasters-ihme' name='federated.1pngd8t0ymx99h1ea9llm1q82q1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1pngd8t0ymx99h1ea9llm1q82q1i'>
            <column caption='Total Number of Death' datatype='real' name='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' derivation='Sum' name='[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Entity:nk]' to='&quot;Western Sub-Saharan Africa&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Entity:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]' included-values='in-range'>
            <min>1987</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</column>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]' field-type='quantitative' max='2019' min='1988' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' field-type='quantitative' max='245089.44911966345' min='-12257.270919663461' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</rows>
        <cols>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='125'>
            <formatted-text>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Bangladesh&quot;</value>
                    <value>1991</value>
                    <value>139252.12160000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='105' y='75' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='120'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;South Asia&quot;</value>
                    <value>1991</value>
                    <value>142287.92079999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='7' y='-165' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='126'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run fontcolor='#c9403b' fontsize='8'>Ã </run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Low SDI&quot;</value>
                    <value>1991</value>
                    <value>141738.27549999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='104' y='-48' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='104'>
            <formatted-text>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Southeast Asia, East Asia, and Oceania&quot;</value>
                    <value>2008</value>
                    <value>229765.8259</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-245' y='45' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='109'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Southeast Asia&quot;</value>
                    <value>2004</value>
                    <value>210969.4143</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-117' y='228' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='112'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run fontcolor='#c9403b' fontsize='8'>Ã </run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Middle SDI&quot;</value>
                    <value>2004</value>
                    <value>215713.46599999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-114' y='138' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run fontcolor='#c9403b' fontsize='8'>Ã </run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Latin America and Caribbean&quot;</value>
                    <value>2010</value>
                    <value>232832.17819999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='132' y='30' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Caribbean&quot;</value>
                    <value>2010</value>
                    <value>230981.79029999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='131' y='129' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Ã </run>
              <run bold='true' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]&gt;</run>
              <run>Ã&#10;</run>
              <run fontcolor='#c9403b' fontsize='8'>Ã </run>
              <run bold='true' fontcolor='#c9403b' fontsize='8'>&lt;[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
                      <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Low SDI&quot;</value>
                    <value>2010</value>
                    <value>224259.42720000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='131' y='206' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF87A95-C889-45A8-85BB-156C1C4F9B20}' />
    </worksheet>
    <worksheet name='Sheet 2 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths-natural-disasters-ihme' name='federated.1pngd8t0ymx99h1ea9llm1q82q1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1pngd8t0ymx99h1ea9llm1q82q1i'>
            <column caption='Total Number of Death' datatype='real' name='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number)]' derivation='Sum' name='[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Entity:nk]' to='&quot;Western Sub-Saharan Africa&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Entity:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]' included-values='in-range'>
            <min>1987</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</column>
            <column>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</rows>
        <cols>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{4072A5EC-7930-4624-8EAD-5B35286F5A23}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='208'>
            <card mode='checkdropdown' param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56CFE611-3710-4041-B686-D00ADD6778C7}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB8FC1D0-E6CB-41EB-B7DA-1D9FE544A94A}' />
    </window>
    <window class='worksheet' name='Sheet 2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Entity:nk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[none:Year:qk]</field>
            <field>[federated.1pngd8t0ymx99h1ea9llm1q82q1i].[sum:Deaths - Exposure to forces of nature - Sex: Both - Age: All Ages (Number):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1494EC26-C653-410A-B1E3-904F621A3F6E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2 (2)' width='192'>
      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
      1ET7BVSqSHg/YqgBAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
